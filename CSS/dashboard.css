/* Start Aside */
aside {
    grid-area: aside;
    background-color: white;
    padding: 1rem;
    height: 100%;
}
aside figure {
    width: 20px;
    height: 20px;
    float: right;
    cursor: pointer;
    margin-right: -18px;
}
aside svg {
    width: 20px;
    height: 20px;
}
aside nav ul {
    flex-direction: column;
    gap: 2rem;
    margin-top: 2rem;
    align-items: start!important;
}
aside nav ul li {
    display: flex;
    align-items: center;
    gap: 1rem;
    cursor: pointer;
    width: 100%;
    padding: .5rem;
    font-weight: bold;
    border-radius: .5rem;
    -webkit-border-radius: .5rem;
    -moz-border-radius: .5rem;
    -ms-border-radius: .5rem;
    -o-border-radius: .5rem;
    transition: background .1s, color .1s;
    -webkit-transition: background .1s, color .1s;
    -moz-transition: background .1s, color .1s;
    -ms-transition: background .1s, color .1s;
    -o-transition: background .1s, color .1s;
}
aside nav ul li:hover {
    background-color: #999;
    color: white;
}
aside nav ul li.active {
    background-color: #555;
    color: white;
}
aside nav ul li:is(:hover, .active) svg {
    fill: white;
}
aside nav ul li::after {
    content: attr(data-type);
}
/* End ASide */
header {
    padding-block: .5rem;
    grid-area: header;
    background-color: white;
}
header .container .even-column {
    justify-content: space-between;
}
header .even-column .even-column {
    gap: 1rem;
}
header input {
    background-image: url(../imgs/searchengin.svg);
    background-repeat: no-repeat;
    border: 1px solid #DDD;
    padding: .3rem;
    border-radius: .3rem;
    -webkit-border-radius: .3rem;
    -moz-border-radius: .3rem;
    -ms-border-radius: .3rem;
    -o-border-radius: .3rem;
    padding-left: 30px;
    outline: none;
}
header input::placeholder {
    color: #999;
}
header input:focus {
    width: 230px;
}
header .icons {
    gap: 1rem;
}
header .icons figure {
    width: 35px;
    height: 35px;
}
/* Start Content Section */
.content {
    grid-area: content;
}
.content .component {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
    align-items: stretch;
    gap: 1rem;
}
.content .component .box {
    display: flex;
    flex-direction: column;
    background-color: white;
    border-radius: .5rem;
    -webkit-border-radius: .5rem;
    -moz-border-radius: .5rem;
    -ms-border-radius: .5rem;
    -o-border-radius: .5rem;
    padding: 1rem;
}
.content .component .box p {
    color: #999;
}
.content .component :is(.box:nth-child(2), .box:last-child) .top {
    background-color: white;
}
.content .component .box:nth-child(2) > * {
    margin-top: 5px;
}
.content .component .top {
    position: relative;
    padding-bottom: 30px;
    background-color: #ccc;
    padding-left: 30px;
    padding-top: 10px
}
.content .component figure {
    width: 40px;
    height: 40px;
    border: 3px solid white;
    border-radius: 50%;
    -webkit-border-radius: 50%;
    -moz-border-radius: 50%;
    -ms-border-radius: 50%;
    -o-border-radius: 50%;
    position: absolute;
    top: 80%
}
.content .component .bottom {
    margin-top: 50px;
}
.content .component .bottom .even-column {
    padding: 30px;
    border-top: 1px solid #CCC;
    border-bottom: 1px solid #CCC;
    justify-content: space-between;
    align-items: center;
}
.content .component .bottom .title {
    text-align: center;
}
.content .component button {
    width: fit-content;
    float: right;
    align-self: flex-end;
    margin-bottom: 1rem;
    margin-top: 10px;
    border: 0;
    padding: .4rem 1rem;
    color: white;
    font-weight: bold;
}
.box input, textarea {
    border: 0;
    outline: none;
    background-color: #f0f0f0;
    padding: 1rem;
    resize: none;
}
.box :where(input, textarea)::placeholder {
    color: black;
    font-weight: bold;
}
.box:last-child .chart > *{
    margin-block: .5rem;
}
.box:last-child .prog-parent {
    background-color: #CCC;
    width: 100%;
    height: 3px;
}
.box:last-child .prog-parent span {
    height: 3px;
    display: block;
    position: relative;
}
.box:last-child .prog-parent .prog1 {
    --clr: var(--accent-clr);
    background-color: var(--clr);
    width: 80%;
}
.box:last-child .prog-parent .prog2 {
    --clr: orange;
    background-color: var(--clr);
    width: 55%;
}
.box:last-child .prog-parent .prog3 {
    --clr: #3db43d;
    background-color: var(--clr);
    width: 75%;
}
.box:last-child h6 {
    font-size: 1.2rem;
}
.box:last-child .prog-parent span::after {
    content: attr(data-prog);
    position: absolute;
    top: -35px;
    right: 0;
    font-size: .8rem;
    font-weight: bold;
    background-color: var(--accent-clr);
    color: white;
    padding: .3rem;
}
.box:last-child .prog-parent .prog1::after{background-color: var(--accent-clr)}
.box:last-child .prog-parent .prog2::after{background-color: orange}
.box:last-child .prog-parent .prog3::after{background-color: #3db43d}
.box:last-child .prog-parent .prog1::before{background-color: var(--accent-clr)}
.box:last-child .prog-parent .prog2::before{background-color: orange}
.box:last-child .prog-parent .prog3::before{background-color: #3db43d}
.box:last-child .prog-parent span::before {
    content: '';
    width: 20px;
    height: 20px;
    background-color: var(--accent-clr);
    position: absolute;
    top: -27px;
    right: 7px;
    transform: rotate(45deg);
    -webkit-transform: rotate(45deg);
    -moz-transform: rotate(45deg);
    -ms-transform: rotate(45deg);
    -o-transform: rotate(45deg);
}